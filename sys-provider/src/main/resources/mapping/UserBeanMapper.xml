<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jk.dao.UserBeanMapper" >
  <resultMap id="BaseResultMap" type="com.jk.entity.UserBean" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="usercode" property="usercode" jdbcType="VARCHAR" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="salt" property="salt" jdbcType="VARCHAR" />
    <result column="locked" property="locked" jdbcType="CHAR" />
    <result column="user_level" property="userLevel" jdbcType="INTEGER" />
    <result column="user_diamond" property="userDiamond" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, usercode, username, password, salt, locked, user_level, user_diamond
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from sys_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from sys_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.jk.entity.UserBean" >
    insert into sys_user (id, usercode, username, 
      password, salt, locked, 
      user_level, user_diamond)
    values (#{id,jdbcType=INTEGER}, #{usercode,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{salt,jdbcType=VARCHAR}, #{locked,jdbcType=CHAR}, 
      #{userLevel,jdbcType=INTEGER}, #{userDiamond,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.jk.entity.UserBean" >
    insert into sys_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="usercode != null" >
        usercode,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="salt != null" >
        salt,
      </if>
      <if test="locked != null" >
        locked,
      </if>
      <if test="userLevel != null" >
        user_level,
      </if>
      <if test="userDiamond != null" >
        user_diamond,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="usercode != null" >
        #{usercode,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null" >
        #{salt,jdbcType=VARCHAR},
      </if>
      <if test="locked != null" >
        #{locked,jdbcType=CHAR},
      </if>
      <if test="userLevel != null" >
        #{userLevel,jdbcType=INTEGER},
      </if>
      <if test="userDiamond != null" >
        #{userDiamond,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jk.entity.UserBean" >
    update sys_user
    <set >
      <if test="usercode != null" >
        usercode = #{usercode,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null" >
        salt = #{salt,jdbcType=VARCHAR},
      </if>
      <if test="locked != null" >
        locked = #{locked,jdbcType=CHAR},
      </if>
      <if test="userLevel != null" >
        user_level = #{userLevel,jdbcType=INTEGER},
      </if>
      <if test="userDiamond != null" >
        user_diamond = #{userDiamond,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jk.entity.UserBean" >
    update sys_user
    set usercode = #{usercode,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      salt = #{salt,jdbcType=VARCHAR},
      locked = #{locked,jdbcType=CHAR},
      user_level = #{userLevel,jdbcType=INTEGER},
      user_diamond = #{userDiamond,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="seluser" resultType="UserBean" parameterType="String">
    select * from sys_user where usercode = #{userCode}
  </select>
  <select id="seltreefind" resultType="TreeBean">
    select sp.id as id,sp.name as text,sp.url as href,sp.parentid as pid from
        sys_user_role sur,
        sys_role_permission srp,
        sys_permission sp
        where sur.sys_user_id=#{userId} and
        sur.sys_role_id=srp.sys_role_id and
        srp.sys_permission_id=sp.id and
        sp.parentid=#{pid} and
        sp.type='menu'
  </select>
  <select id="selprincipList" resultType="String" parameterType="Integer">
    select sp.percode from
        sys_user_role sur,
        sys_role_permission srp,
        sys_permission sp
        where sur.sys_user_id=#{id} and
        sur.sys_role_id=srp.sys_role_id and
        srp.sys_permission_id=sp.id and (sp.percode &lt;&gt; '' or sp.percode is not NULL)
  </select>
</mapper>